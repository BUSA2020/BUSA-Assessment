Question 1:


vi newer.sh
_____________________________________________________

#!/bin/bash
ls -lt
ls -1tr * | tail -1
_____________________________________________________

ubuntu@ip-172-31-18-210:~$ touch -t 202003181925 foo
ubuntu@ip-172-31-18-210:~$ touch -t 202003181926 goo
ubuntu@ip-172-31-18-210:~$ touch -t 202003181927 hoo
_____________________________________________________

ubuntu@ip-172-31-18-210:~$ ls
Program  con-sh-exe.sh  foo  fruits.sh  goo  hoo  monkey.sh  newer.sh  sorting.sh
_____________________________________________________

ubuntu@ip-172-31-18-210:~$ ./newer.sh
total 8
-rw-rw-r-- 1 ubuntu ubuntu  0 Mar 17 19:27 hoo
-rw-rw-r-- 1 ubuntu ubuntu  0 Mar 17 19:26 goo
-rw-rw-r-- 1 ubuntu ubuntu  0 Mar 17 19:25 foo
-rwxrw-r-- 1 ubuntu ubuntu 41 Mar 17 08:23 newer.sh
-rw-rw-r-- 1 ubuntu ubuntu  0 Mar 17 06:04 Program
-rwxrw-r-- 1 ubuntu ubuntu 10 Mar 17 06:03 con-sh-exe.sh
-rw-rw-r-- 1 ubuntu ubuntu  0 Mar 15 18:02 sorting.sh
-rw-rw-r-- 1 ubuntu ubuntu  0 Mar 15 18:01 fruits.sh
-rw-rw-r-- 1 ubuntu ubuntu  0 Mar 15 18:00 monkey.sh
hoo
_____________________________________________________
#the script successfully executed two commands, one to list the files by date modified and the next to return the newest file which is hoo
_____________________________________________________




Question 2:



ubuntu@ip-172-31-18-210:~$ vi test_me.sh
_____________________________________________________

#!/bin/bash
if [ -z "$1" ];
then
echo "This is NOT a test"
else
echo "This is a TEST"
fi
_____________________________________________________

ubuntu@ip-172-31-18-210:~$ ./test_me.sh
This is NOT a test
ubuntu@ip-172-31-18-210:~$ ./test_me.sh foo
This is a TEST

_____________________________________________________



Question 3E

_____________________
vi time-signal.sh
_____________________

#!/bin/bash
# save as time-signal.sh
# gives a time signal every hour when connected to cron
time=$(date +%I)
count=0
while test $count -lt "$time"; do
  echo -e "\a"
  sleep 1 # sleep for one second
  count=$((count+1))
done
sleep 3
minutes=$(date +%M)
if test "$minutes" -gt 15 && test "$minutes" -lt 30; then
        echo -e "\a"
elif test "$minutes" -gt 30 && test "$minutes" -lt 45; then
        echo -e "\a\a"
elif test "$minutes" -gt 45 && test "$minutes" -lt 60; then
        echo -e "\a\a\a"
else
        echo "still too early to beep"
fi

